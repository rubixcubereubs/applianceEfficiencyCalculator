{"ast":null,"code":"var _jsxFileName = \"/Users/reuben/Documents/GitHub/applianceEfficiencyCalculator/src/components/calculator.js\";\nimport React, { Component } from \"react\";\nimport Calculate from \"./calculate\";\nimport Header from \"./header\";\nimport About from \"./about\";\n\nclass Calculator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      appliance: \"\",\n      applianceInput: \"\",\n      watts: \"\",\n      kW: \"\",\n      units: \"\",\n      ppkWh: \"\",\n      timeHours: \"\",\n      noOfAppliances: 1,\n      cost: \"\",\n      totalAmount: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    var watts = this.state.watts;\n    var timeHours = this.state.timeHours;\n    var noOfAppliances = this.state.noOfAppliances;\n    var cost = this.state.cost;\n    var kW = this.state.kW;\n    var ppkWh = this.state.ppkWh;\n    var units = this.state.units;\n    var totalAmount = this.state.totalAmount;\n    kW = watts / 1000;\n    units = kW * timeHours * noOfAppliances;\n    ppkWh = units * cost;\n    totalAmount = ppkWh / 100;\n    const round = totalAmount.toFixed(2);\n    this.setState({\n      totalAmount: round\n    });\n    if (round > 0) console.log(this.state.appliance, \"£\" + round);\n  }\n\n  handleReset() {\n    this.setState({\n      appliance: \"\",\n      watts: \"\",\n      timeHours: \"\",\n      noOfAppliances: \"\",\n      cost: \"\",\n      kW: \"\",\n      units: \"\"\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      data: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(About, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Calculate, {\n      data: this.state,\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit,\n      handleReset: this.handleReset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Calculator; //calculate() {\n//let appliance = this.state.appliance;\n//var watts = 2600;\n//var kW = watts / 1000.0;\n//var timeHours = 3;\n//var noOfAppliances = 1;\n//var units = kW * timeHours * noOfAppliances;\n//var cost = 15;\n//var ppkWh = units * cost;\n//var totalAmount = ppkWh / 100.0;\n//var t = totalAmount.toFixed(2);","map":{"version":3,"sources":["/Users/reuben/Documents/GitHub/applianceEfficiencyCalculator/src/components/calculator.js"],"names":["React","Component","Calculate","Header","About","Calculator","constructor","props","state","appliance","applianceInput","watts","kW","units","ppkWh","timeHours","noOfAppliances","cost","totalAmount","handleChange","bind","handleSubmit","handleReset","event","name","value","target","setState","preventDefault","round","toFixed","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Calculate from \"./calculate\";\nimport Header from \"./header\";\nimport About from \"./about\";\n\nclass Calculator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      appliance: \"\",\n      applianceInput: \"\",\n      watts: \"\",\n      kW: \"\",\n      units: \"\",\n      ppkWh: \"\",\n      timeHours: \"\",\n      noOfAppliances: 1,\n      cost: \"\",\n      totalAmount: \"\",\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    var watts = this.state.watts;\n    var timeHours = this.state.timeHours;\n    var noOfAppliances = this.state.noOfAppliances;\n    var cost = this.state.cost;\n    var kW = this.state.kW;\n    var ppkWh = this.state.ppkWh;\n    var units = this.state.units;\n    var totalAmount = this.state.totalAmount;\n    kW = watts / 1000;\n    units = kW * timeHours * noOfAppliances;\n    ppkWh = units * cost;\n    totalAmount = ppkWh / 100;\n    const round = totalAmount.toFixed(2);\n    this.setState({ totalAmount: round });\n    if (round > 0) console.log(this.state.appliance, \"£\" + round);\n  }\n\n  handleReset() {\n    this.setState({\n      appliance: \"\",\n      watts: \"\",\n      timeHours: \"\",\n      noOfAppliances: \"\",\n      cost: \"\",\n      kW: \"\",\n      units: \"\",\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Header data={this.state} />\n        <About />\n        <Calculate\n          data={this.state}\n          handleChange={this.handleChange}\n          handleSubmit={this.handleSubmit}\n          handleReset={this.handleReset}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Calculator;\n\n//calculate() {\n//let appliance = this.state.appliance;\n//var watts = 2600;\n//var kW = watts / 1000.0;\n//var timeHours = 3;\n//var noOfAppliances = 1;\n//var units = kW * timeHours * noOfAppliances;\n//var cost = 15;\n//var ppkWh = units * cost;\n//var totalAmount = ppkWh / 100.0;\n//var t = totalAmount.toFixed(2);\n"]},"metadata":{},"sourceType":"module"}